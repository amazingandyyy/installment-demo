@charset "UTF-8";

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

img, legend {
    border: 0
}
legend, td, th {
    padding: 0
}
html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%
}
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
    display: block
}
audio, canvas, progress, video {
    display: inline-block;
    vertical-align: baseline
}
audio:not([controls]) {
    display: none;
    height: 0
}
[hidden], template {
    display: none
}
.constbase .vertical-center, body .grid {
    display: -webkit-box;
    display: -ms-flexbox
}
a {
    background-color: transparent
}
a:active, a:hover {
    outline: 0
}
abbr[title] {
    border-bottom: 1px dotted
}
b, optgroup, strong {
    font-weight: 700
}
dfn {
    font-style: italic
}
h1 {
    font-size: 2em;
    margin: .67em 0
}
mark {
    background: #ff0;
    color: #000
}
small {
    font-size: 80%
}
sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline
}
sup {
    top: -.5em
}
sub {
    bottom: -.25em
}
svg:not(:root) {
    overflow: hidden
}
figure {
    margin: 1em 40px
}
hr {
    box-sizing: content-box;
    height: 0
}
pre, textarea {
    overflow: auto
}
code, kbd, pre, samp {
    font-family: monospace, monospace;
    font-size: 1em
}
button, input, optgroup, select, textarea {
    color: inherit;
    font: inherit;
    margin: 0
}
button {
    overflow: visible
}
button, select {
    text-transform: none
}
button, html input[type=button], input[type=reset], input[type=submit] {
    -webkit-appearance: button;
    cursor: pointer
}
button[disabled], html input[disabled] {
    cursor: default
}
button::-moz-focus-inner, input::-moz-focus-inner {
    border: 0;
    padding: 0
}
input {
    line-height: normal
}
input[type=checkbox], input[type=radio] {
    box-sizing: border-box;
    padding: 0
}
input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button {
    height: auto
}
input[type=search] {
    -webkit-appearance: textfield;
    box-sizing: content-box
}
input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration {
    -webkit-appearance: none
}
fieldset {
    border: 1px solid silver;
    margin: 0 2px;
    padding: .35em .625em .75em
}
table {
    border-collapse: collapse;
    border-spacing: 0
}
body {
    overflow-x: hidden;
    margin: 0;
    font-family: Lato, "Helvetica Neue", Helvetica, sans-serif;
    color: #242424
}
body h1, body h2, body h3, body h4, body h5, body h6, body p {
    line-height: 1.25em
}
body h1 {
    line-height: 1.15em
}
body h2 {
    line-height: 1.2em
}
body .info-group {
    padding: 10px 0
}
body .info-group .title {
    margin: 0 0 3px
}
body .info-group .body {
    margin: 0
}
body .wrapper {
    padding: 10px
}
body .grid {
    display: flex;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start
}
body .grid .item {
    width: 100%;
    margin: 0;
    padding: 10px 0;
    position: relative
}
body.light h1, body.light h2, body.light h3, body.light h4, body.light h5, body.light h6, body.light p {
    margin: 0;
    line-height: 2rem;
    font-weight: 300
}
.constbase hr {
    margin-top: 3rem;
    margin-bottom: 3.5rem;
    border-width: 0;
    border-top: 1px solid #E1E1E1
}
.constbase .clickable {
    cursor: pointer
}
.constbase .unclickable {
    cursor: default
}
.constbase .LARGE {
    font-size: 400%;
    margin: 0!important
}
.constbase .Bold, .constbase .Strong, .constbase .bold, .constbase .strong {
    font-weight: 600!important
}
.constbase .BOLD, .constbase .STRONG {
    font-weight: 900!important
}
.constbase .LIGHT {
    font-weight: 100!important
}
.constbase .Light, .constbase .light {
    font-weight: 300!important
}
.constbase .normal {
    font-weight: 500!important
}
.constbase .TEXT {
    text-transform: uppercase!important;
    letter-spacing: -1px
}
.constbase .text {
    text-transform: lowercase!important
}
.constbase .Text {
    text-transform: capitalize!important
}
.constbase .TITLE {
    font-size: 4em
}
.constbase .Title {
    font-size: 2.5em
}
.constbase .T_E_X_T, .constbase .t_e_x_t {
    letter-spacing: 1px
}
.constbase .T__E__X__T, .constbase .t__e__x__t {
    letter-spacing: 2px
}
.constbase .text-white {
    color: #fff
}
.constbase .justified, .constbase .justify, .constbase .text-justify {
    text-align: justify
}
.constbase .text-responsive {
    font-size: 100%!important
}
.constbase .padding {
    padding: 4px 20px
}
.constbase .bordered {
    border: 1px solid #ddd
}
.constbase .rounded {
    border-radius: 4px
}
.constbase .shadowed {
    box-shadow: 0 0 10px -1px rgba(0, 0, 0, .3)
}
.constbase .inverse, .constbase .reverse {
    background: #333
}
.constbase .inverse h1, .constbase .inverse h2, .constbase .inverse h3, .constbase .inverse h4, .constbase .inverse h5, .constbase .inverse h6, .constbase .inverse p, .constbase .reverse h1, .constbase .reverse h2, .constbase .reverse h3, .constbase .reverse h4, .constbase .reverse h5, .constbase .reverse h6, .constbase .reverse p {
    color: #fff!important
}
.constbase .full-scream {
    height: 91vh
}
.constbase .half-scream {
    height: 70vh
}
.constbase .horizontal-center, .constbase .text-center {
    text-align: center!important
}
.constbase .vertical-center {
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center
}
.constbase .all-center, .constbase .center-content {
    text-align: center!important;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center
}
.constbase .all-center div, .constbase .center-content div {
    padding: 0;
    margin: auto
}
.constbase .noblocked {
    display: inline
}
.constbase .grayed {
    background: #ddd
}
@media (min-width:750px) {
    .constbase .half-scream {
        height: 70vh
    }
    .constbase .text-responsive {
        font-size: 110%!important
    }
}
@media (min-width:1000px) {
    .constbase .half-scream {
        height: 80vh
    }
    .constbase .text-responsive {
        font-size: 130%!important
    }
}
body.dev-mode div {
    outline-offset: 0;
    outline: red solid 1px
}
body.dev-mode .dev-label {
    z-index: 999;
    position: absolute!important;
    color: #fff;
    background-color: red;
    padding: 0 5px;
    font-size: 9px;
    top: 0;
    left: 0
}
body.dev-mode .devPanel.active {
    top: 0;
    right: -230px;
    -webkit-transition: .2s all ease-in-out;
    transition: .2s all ease-in-out
}
body.dev-mode .devPanel.active span.show {
    display: none
}
body.dev-mode .devPanel.active span.hide {
    display: inline
}
body.dev-mode .devPanelHandler .toggle {
    z-index: 1000;
    position: fixed!important;
    bottom: 10px;
    right: 10px;
    border-radius: 4px;
    border: 1px solid #ddd;
    cursor: pointer;
    background: #fff;
    line-height: 30px;
    text-align: center;
    height: 30px;
    width: 30px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none
}
body.dev-mode .devPanel {
    width: 220px;
    max-width: 220px;
    min-width: 220px;
    height: 120%;
    z-index: 999;
    position: fixed!important;
    padding: 0;
    top: 0;
    right: 0;
    background: #eee;
    border-left: 1px solid #B9B9B9;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    cursor: default;
    -webkit-transition: .4s all ease-in-out;
    transition: .4s all ease-in-out;
    font-family: sans-serif;
    font-size: .7em;
    font-weight: 500;
    color: #333
}
body.dev-mode .devPanel .dev-setting-section {
    display: none
}
body.dev-mode .devPanel .dev-setting-section.active {
    display: block
}
body.dev-mode .devPanel .panel-container {
    margin: 0
}
body.dev-mode .devPanel .panel-container .navigator {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: distribute;
    justify-content: space-around;
    margin: 0;
    text-transform: capitalize;
    background: #f5f5f5;
    font-weight: 700
}
body.dev-mode .devPanel .panel-container .navigator .nav-item {
    height: 28px;
    line-height: 28px;
    width: 33.333%;
    margin: auto;
    text-align: center;
    display: inline;
    cursor: default;
    color: #6d6d6d;
    overflow: hidden;
    letter-spacing: .3px;
    border-bottom: 1px solid #B9B9B9
}
body.dev-mode .devPanel .panel-container .navigator .nav-item.active {
    background: #1f87ff;
    border-bottom: 1px solid #0679ff;
    box-shadow: .8px 0 0 0 #0679ff;
    color: #fff
}
body.dev-mode .devPanel .panel-container .navigator .nav-item.active:active {
    background: #0679ff;
    box-shadow: .8px 0 0 0 #0679ff;
    color: #fff
}
body.dev-mode .devPanel .panel-container .navigator .nav-item:active {
    background: #ebebeb
}
body.dev-mode .devPanel .panel-container .navigator .nav-item {
    box-shadow: .8px 0 0 0 rgba(185, 185, 185, .6)
}
body.dev-mode .devPanel .panel-container .screen {
    margin: 0;
    text-transform: capitalize;
    background: #fff;
    padding: 10px;
    font-weight: 700
}
body.dev-mode .devPanel .panel-container .screen .screen-container {
    margin: 10px auto;
    height: 130px;
    width: 130px;
    border: 1px solid #a0a0a0;
    position: relative
}
body.dev-mode .devPanel .panel-container .screen .screen-container .height, body.dev-mode .devPanel .panel-container .screen .screen-container .width {
    position: absolute;
    text-transform: lowercase;
    font-weight: 300;
    font-size: .9em;
    color: #535353;
    padding-left: 2px;
    padding-right: 2px
}
body.dev-mode .devPanel .panel-container .screen .screen-container .height {
    right: -34px;
    top: 40%
}
body.dev-mode .devPanel .panel-container .screen .screen-container .width {
    top: -7px;
    right: 35%;
    background: #fff;
    margin: auto
}
body.dev-mode .devPanel .panel-container .screen .device {
    text-align: center;
    background: #fff;
    margin: auto
}
body.dev-mode .devPanel .panel-container .title {
    margin: 0;
    text-transform: capitalize;
    background: #f5f5f5;
    border-bottom: 1px solid #d3d3d3;
    border-top: 1px solid #d3d3d3;
    padding: 5.5px 0 5.5px 8px;
    font-weight: 700
}
body.dev-mode .devPanel .panel-container .setting-container {
    padding: 10px 8px
}
body.dev-mode .devPanel .panel-container .setting-container table {
    width: 100%;
    text-align: center
}
body.dev-mode .devPanel .panel-container .setting-container table td {
    vertical-align: middle
}
body.dev-mode .devPanel .panel-container .setting-container table td p {
    margin: 5px 0 0;
    font-size: .8em
}
body.dev-mode .devPanel .panel-container .setting-container input[type=number] {
    height: 16px;
    max-width: 40px;
    padding: 2px 2px 2px 3px;
    border: 2px solid #eee;
    outline: 0;
    box-shadow: inset 0 0 0 .5px rgba(0, 0, 0, .3)
}
body.dev-mode .devPanel .panel-container .setting-container input[type=number]:focus {
    border: 2px solid rgba(82, 162, 255, .8);
    border-radius: 3.6px
}
body.dev-mode .devPanel .panel-container .setting-container input[type=color] {
    -webkit-appearance: square-button;
    border: 0 solid;
    background: 0 0;
    outline: 0;
    cursor: pointer;
    position: relative;
    height: 22px
}
body.dev-mode .devPanel .panel-container .setting-container input[type=color]:hover::before {
    content: '+';
    position: absolute;
    font-weight: 900;
    color: rgba(0, 0, 0, .5);
    height: 3px;
    width: 3px;
    top: 5px;
    right: 50%
}
body.dev-mode .devPanel .panel-container .setting-container input[type=color]:active::-webkit-color-swatch-wrapper {
    background: #e6e6e6
}
body.dev-mode .devPanel .panel-container .setting-container input[type=color]::-webkit-color-swatch {
    box-shadow: inset 0 0 .2px .2px rgba(0, 0, 0, .4);
    border-radius: 2px;
    border-width: 0;
    outline: 0
}
body.dev-mode .devPanel .panel-container .setting-container input[type=color]::-webkit-color-swatch-wrapper {
    border-radius: 4px;
    background: #fff;
    padding: 4px;
    outline: 0;
    box-shadow: 0 .4px 1px -.6px #000, inset 0 0 0 .2px rgba(0, 0, 0, .5)
}
body.dev-mode .devPanel .panel-container .setting-container input[type=checkbox] {
    margin-left: 0;
    margin-right: 2px
}
body.dev-mode .devPanel .panel-container .setting-container input[type=range] {
    -webkit-appearance: none;
    border-radius: 100px;
    height: 3.6px;
    background: #c3c3c3;
    box-shadow: inset 0 0 0 .2px rgba(0, 0, 0, .3);
    outline: 0;
    margin-left: 0;
    margin-right: 0;
    margin-bottom: 5.5px;
    max-width: 100%;
    white-space: nowrap
}
body.dev-mode .devPanel .panel-container .setting-container input[type=range]::-webkit-slider-runnable-track {
    outline: 0
}
body.dev-mode .devPanel .panel-container .setting-container input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    box-shadow: 0 .6px .6px -.7px #000, inset 0 0 0 .4px rgba(0, 0, 0, .3);
    border-radius: 50%;
    border: none;
    height: 12px;
    width: 12px;
    background: #fff;
    margin-top: -.6px
}
body.dev-mode .devPanel .panel-container .setting-container input[type=range]:active::-webkit-slider-thumb {
    box-shadow: 0 1px .6px -.7px #000, inset 0 0 0 .4px rgba(0, 0, 0, .3);
    background: rgba(246, 246, 246, .99)
}
body.dev-mode .devPanel span.show {
    display: inline
}
body.dev-mode .devPanel span.hide {
    display: none
}
body.dev-mode .devPanel div, body.dev-mode .devPanel span, body.dev-mode .devPanelHandler div, body.dev-mode .devPanelHandler span {
    outline-offset: 0;
    outline: transparent solid 0
}

/*# sourceMappingURL=data:application/json;base64, */
