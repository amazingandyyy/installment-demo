"use strict";function init(){sticky(),windowScrollDown()}function sticky(){$(".singlePlanPreviewSticky").sticky({topSpacing:80})}function windowScrollDown(){var a,e=0;$(window).scroll(function(){a=$(this).scrollTop(),$(window).scrollTop()>30&&(e>a?($(".home-page nav").removeClass("folded"),$(".home-page nav").css("border-bottom","0px solid")):$(".home-page nav").addClass("folded")),e=a,$(window).scrollTop()<10&&$(".home-page nav").addClass("top"),$(window).scrollTop()>10&&$(".home-page nav").removeClass("top"),$(window).scrollTop()>30,$(window).scrollTop()<540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0)"),$(window).scrollTop()>540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0.1)")})}function Account(a){this.getCurrentUser=function(){return a({method:"GET",url:"/api/auth/currentUser"})},this.sendVerifyCode=function(e){return a({method:"POST",url:"/api/verify/phone",data:e})},this.verifyCode=function(e){return a({method:"PUT",url:"/api/verify/phone",data:e})},this.getUserData=function(e){return a({method:"GET",url:"/api/users/"+e})},this.updateUserData=function(e,n){return a({method:"PUT",url:"/api/users/"+e,data:n})}}function Payment(a){this.chargeNow=function(e){return a({method:"POST",url:"/api/payment/chargeNow",data:e})}}function focus(a,e){return function(n){e(function(){a.$broadcast("focusOn",n)},0)}}function Plan(a,e,n){this.addSinglePreview=function(e){return a(function(a,n){localStorage.planPreviewData=JSON.stringify(e),a(localStorage.planPreviewData)})},this.getSinglePreview=function(){return a(function(a,e){a(JSON.parse(localStorage.planPreviewData))})},this.saveSinglePlan=function(a){return n({method:"POST",url:"/api/plans/saveSinglePlan",data:a})},this.getSinglePlan=function(a){return n({method:"GET",url:"/api/plans/getSinglePlan/"+a})}}function Storage(a){this.get=function(){},this.save=function(a){console.log("obj: ",a)}}function homeCtrl(a,e,n,t,o,r,l){function s(){e.getToken()?t.getCurrentUser(e.getToken()).then(function(a){console.log("@CurrentUser: ",a.data),r.currentUser=a.data},function(a){return n.go("authEntrance")}):!e.getToken()&&l.$$path.includes("dashboard")&&n.go("authEntrance")}r.$on("$stateChangeSuccess",function(e,t,o,d,i){r.previousState=d.name,r.currentState=t.name,console.log(r.previousState," >>> ",r.currentState),"authEntrance"==r.currentState&&a.currentUser&&n.go("dashboard"),a.currentUrl=l.$$path,s()})}function authCtrl(a,e,n,t,o,r){a.auth_enter=function(a){e.signup(a).then(function(a){e.setToken(a),n.go("dashboard",{},{reload:!0}),console.log("res @auth_enter: ",a.data)},function(a){return console.log("err @auth_enter: ",a)})},a.authenticate=function(a){e.authenticate(a)}}function dashboardCtrl(a,e,n,t,o,r,l){a.logout=function(){console.log("check"),e.logout(),a.currentUser=null,n.go("landing",{},{reload:!0}),l.location.reload()},a.sendVerifyCode=function(e){if(console.log("phone: ",e),e.length>5){var n={userData:o.currentUser,phone:e};console.log("userObj: ",n),t.sendVerifyCode(n).then(function(n){console.log("res @sendVerifyCode: ",n.data),o.currentUser.phone.data=e,a.verifyPhoneSentOut=!0},function(a){console.log("err @sendVerifyCode: ",a)})}},a.verifyCode=function(a){if(console.log("code: ",a),0!==a.length){var e={userData:o.currentUser,code:a};t.verifyCode(e).then(function(a){console.log("res @verifyCode: ",a.data),a.data.msg?"incorrect"==a.data.msg?console.log("err: incorrect"):(a.data.msg="expired")&&console.log("err: expired"):o.currentUser.phone.verified=!0},function(a){console.log("err @verifyCode: ",a)})}},a.doCheckout=function(a){console.log("fff"),console.log("token: ",a);var e={stripeToken:a,userData:o.currentUser};r.chargeNow(e).then(function(a){console.log("res: ",a.data)},function(a){console.log("err: ",a)})}}function dashboardPlanCtrl(a,e,n,t,o,r){console.log("dashboardPlanCtrl loaded"),"dashboard_plan_single"==r.currentState&&(a.updateTimes=function(e){a.installmentsGraphData=[];for(var n=0;e>n;n++){var t=~~(a.plan.total/e),o=~~(200*(2/e));a.installmentsGraphData.push({price:t,style:{height:o+"px",width:"90%"}})}},a.defaultPlanTimes=function(e){return e?a.plan:a.plan.times=3},a.previewSinglePlan=function(a){console.log("plan: ",a),o.addSinglePreview(a).then(function(a){t.go("dashboard_plan_single_preview")},function(a){return console.log("err @addSinglePreview: ",a)})},a.plan={},a.singlePayment=function(){return(a.plan.total-a.plan.downpay)/a.plan.times},a.intervalSelected=function(e){a.plan.interval==e?a.plan.interval=null:a.plan.interval=e}),"dashboard_plan_single_preview"==r.currentState&&(o.getSinglePreview().then(function(e){console.log("res @getSinglePreview: ",e),a.planPreview=e,a.planPreview.installment=(e.total-e.downpay)/e.times},function(a){return console.log("err @getSinglePreview: ",a)}),a.saveSinglePlan=function(a){console.log(a);var e={planDetails:a,creator:r.currentUser};console.log("saveSinglePlanInfo: ",e),o.saveSinglePlan(e).then(function(a){console.log("res @saveSinglePlan: ",a.data),t.go("dashboard_plan_details",{planId:a.data._id},{reload:!0})},function(a){return console.log("err @saveSinglePlan: ",a)})},a.dashboard_plan_single_preview_goback=function(a){"dashboard_plan_details_edit"==r.previousState?t.go("dashboard_plan_details_edit",{planId:a._id}):"dashboard_plan_single"==r.previousState&&t.go("dashboard_plan_single")}),a.getAllPlans=function(){var a=r.currentUser._id;console.log("currentUserId: ",a)},"dashboard_plan_details"==r.currentState&&o.getSinglePlan(t.params.planId).then(function(e){console.log("res @getSinglePlan: ",e.data),a.plan=e.data.data,a.planId=e.data._id,a.itCreator=function(){return e.data.creator.includes(r.currentUser._id)}},function(a){return console.log("err @getSinglePlan: ",a)}),"dashboard_plan_details_edit"==r.currentState&&(console.log(t.params.planId),o.getSinglePlan(t.params.planId).then(function(e){e.data.creator.includes(r.currentUser._id)||t.go("dashboard"),console.log("res @getSinglePlan: ",e.data),a.plan=e.data.data,a.plan._id=e.data._id,a.itCreator=function(){return e.data.creator.includes(r.currentUser._id)},a.updateTimes=function(e){a.installmentsGraphData=[];for(var n=0;e>n;n++){var t=~~(a.plan.total/e),o=~~(200*(2/e));a.installmentsGraphData.push({price:t,style:{height:o+"px",width:"90%"}})}},a.defaultPlanTimes=function(e){return e?a.plan:a.plan.times=3},a.previewSinglePlan=function(a){o.addSinglePreview(a).then(function(a){t.go("dashboard_plan_single_preview")},function(a){return console.log("err @addSinglePreview: ",a)})},a.singlePayment=function(){return(a.plan.total-a.plan.downpay)/a.plan.times},a.intervalSelected=function(e){a.plan.interval==e?a.plan.interval=null:a.plan.interval=e}},function(a){return console.log("err @getSinglePlan: ",a)}))}function focusOn(){return function(a,e,n){a.$on("focusOn",function(a,t){t===n.focusOn&&e[0].focus()})}}function toolTip(){return function(a,e,n){angular.element(".tool-tip").on("click mouseleave",hideTooltip),angular.element(".tool-tip").on("mouseenter",showTooltip)}}function hideTooltip(){$(this).tooltip("hide")}function showTooltip(){$(this).tooltip("show")}angular.module("pinchApp",["ui.router","satellizer","ngAnimate","ngFileUpload","ngImgCrop","stripe.checkout","angular-loading-bar","anim-in-out"]).config(["$stateProvider","$urlRouterProvider","$authProvider",function(a,e,n){Stripe.setPublishableKey("pk_test_t1eThhOKl6esrp6f4jyWqU4J"),a.state(landing).state(authEntrance).state(dashboard).state(dashboard_payment).state(dashboard_plan).state(dashboard_plan_start).state(dashboard_plan_details).state(dashboard_plan_details_edit).state(dashboard_plan_choose).state(dashboard_plan_single).state(dashboard_plan_single_preview).state(dashboard_plan_multiple).state(dashboard_account),e.otherwise("/")}]);var landing={name:"landing",url:"/",views:{main:{templateUrl:"/html/landing.html",controller:"authCtrl"}}},authEntrance={name:"authEntrance",url:"/entrance",views:{main:{templateUrl:"/html/entrance.html",controller:"authCtrl"}}},dashboard={name:"dashboard",url:"/dashboard",views:{main:{templateUrl:"/html/dashboard.html",controller:"dashboardCtrl"}}},dashboard_payment={name:"dashboard_payment",url:"/payment",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_payment.html",controller:"dashboardCtrl"}}},dashboard_plan={name:"dashboard_plan",url:"/plan",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_plan.html",controller:"dashboardCtrl"}}},dashboard_plan_start={name:"dashboard_plan_start",url:"/start",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_start.html",controller:"dashboardCtrl"}}},dashboard_plan_details={name:"dashboard_plan_details",url:"/details/:planId",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_details.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_details_edit={name:"dashboard_plan_details_edit",url:"/details/:planId/edit",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_details_edit.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_choose={name:"dashboard_plan_choose",url:"/choose",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_choose.html",controller:"dashboardCtrl"}}},dashboard_plan_single={name:"dashboard_plan_single",url:"/choose/single",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_single_preview={name:"dashboard_plan_single_preview",url:"/choose/single/preview",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single_preview.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_multiple={name:"dashboard_plan_multiple",url:"/choose/mutiple",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_multiple.html",controller:"dashboardCtrl"}}},dashboard_account={name:"dashboard_account",url:"/account",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_account.html",controller:"dashboardCtrl"}}};$(document).ready(init),Account.$inject=["$http"],Payment.$inject=["$http"],focus.$inject=["$rootScope","$timeout"],Plan.$inject=["$q","Storage","$http"],Storage.$inject=["$q"],angular.module("pinchApp").service("Account",Account).service("Payment",Payment).factory("focus",focus).service("Plan",Plan).service("Storage",Storage),homeCtrl.$inject=["$scope","$auth","$state","Account","$window","$rootScope","$location"],authCtrl.$inject=["$scope","$auth","$state","Account","$window","$rootScope"],dashboardCtrl.$inject=["$scope","$auth","$state","Account","$rootScope","Payment","$window"],dashboardPlanCtrl.$inject=["$scope","Account","$stateParams","$state","Plan","$rootScope"],angular.module("pinchApp").controller("homeCtrl",homeCtrl).controller("authCtrl",authCtrl).controller("dashboardCtrl",dashboardCtrl).controller("dashboardPlanCtrl",dashboardPlanCtrl),angular.module("pinchApp").directive("focusOn",focusOn),angular.module("pinchApp").directive("toolTip",toolTip);
//# sourceMappingURL=data:application/json;base64,
