"use strict";function init(){sticky(),windowScrollDown()}function sticky(){$(".sticky").sticky({topSpacing:60})}function windowScrollDown(){var e,t=0;$(window).scroll(function(){e=$(this).scrollTop(),$(window).scrollTop()>30&&(t>e?($(".home-page nav").removeClass("folded"),$(".home-page nav").css("border-bottom","0px solid")):$(".home-page nav").addClass("folded")),t=e,$(window).scrollTop()<10&&$(".home-page nav").addClass("top"),$(window).scrollTop()>10&&$(".home-page nav").removeClass("top"),$(window).scrollTop()>30,$(window).scrollTop()<540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0)"),$(window).scrollTop()>540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0.1)")})}function Account(e){this.getCurrentUser=function(){return e({method:"GET",url:"/api/auth/currentUser"})},this.sendVerifyCode=function(t){return e({method:"POST",url:"/api/verify/phone",data:t})},this.verifyCode=function(t){return e({method:"PUT",url:"/api/verify/phone",data:t})},this.getUserData=function(t){return e({method:"GET",url:"/api/users/"+t})},this.updateUserData=function(t,a){return e({method:"PUT",url:"/api/users/"+t,data:a})}}function Payment(e){this.chargeNow=function(t){return e({method:"POST",url:"/api/payment/chargeNow",data:t})}}function focus(e,t){return function(a){t(function(){e.$broadcast("focusOn",a)},0)}}function Plan(e,t){this.addSinglePreview=function(t){return e(function(e,a){localStorage.planPreviewData=JSON.stringify(t),e(localStorage.planPreviewData)})},this.getSinglePreview=function(){return e(function(e,t){e(JSON.parse(localStorage.planPreviewData))})}}function Storage(e){this.get=function(){},this.save=function(e){console.log("obj: ",e)}}function homeCtrl(e,t,a,o,n,r,l){function s(){t.getToken()?o.getCurrentUser(t.getToken()).then(function(t){console.log("@CurrentUser: ",t.data),e.currentUser=t.data},function(e){return a.go("authEntrance")}):!t.getToken()&&l.$$path.includes("dashboard")&&a.go("authEntrance")}r.$on("$stateChangeSuccess",function(t,o,n,i,d){r.previousState=i.name,r.currentState=o.name,console.log(r.previousState," >>> ",r.currentState),"authEntrance"==r.currentState&&e.currentUser&&a.go("dashboard"),e.currentUrl=l.$$path,s()})}function authCtrl(e,t,a,o,n,r){e.auth_enter=function(e){t.signup(e).then(function(e){t.setToken(e),a.go("dashboard",{},{reload:!0}),console.log("res @auth_enter: ",e.data)},function(e){return console.log("err @auth_enter: ",e)})},e.authenticate=function(e){t.authenticate(e)}}function dashboardCtrl(e,t,a,o,n,r,l){e.logout=function(){console.log("check"),t.logout(),e.currentUser=null,a.go("landing",{},{reload:!0}),l.location.reload()},e.sendVerifyCode=function(t){if(console.log("phone: ",t),t.length>5){var a={userData:n.currentUser,phone:t};o.sendVerifyCode(a).then(function(a){console.log("res @sendVerifyCode: ",a.data),n.currentUser.phone.data=t,e.verifyPhoneSentOut=!0},function(e){console.log("err @sendVerifyCode: ",e)})}},e.verifyCode=function(e){if(console.log("code: ",e),0!==e.length){var t={userData:n.currentUser,code:e};o.verifyCode(t).then(function(e){console.log("res @verifyCode: ",e.data),n.currentUser.phone.verified=!0},function(e){console.log("err @verifyCode: ",e)})}},e.doCheckout=function(e){console.log("fff"),console.log("token: ",e);var t={stripeToken:e,userData:n.currentUser};r.chargeNow(t).then(function(e){console.log("res: ",e.data)},function(e){console.log("err: ",e)})}}function dashboardPlanCtrl(e,t,a,o,n,r){console.log("dashboardPlanCtrl loaded"),"dashboard_plan_single"==r.currentState&&(e.updateTimes=function(t){e.installmentsGraphData=[];for(var a=0;t>a;a++){var o=~~(e.plan.total/t),n=~~(200*(2/t));e.installmentsGraphData.push({price:o,style:{height:n+"px",width:"90%"}})}},e.previewSinglePlan=function(e){console.log("plan: ",e),n.addSinglePreview(e).then(function(e){o.go("dashboard_plan_single_preview")},function(e){return console.log("err @addSinglePreview: ",e)})}),"dashboard_plan_single_preview"==r.currentState&&n.getSinglePreview().then(function(t){console.log("res @getSinglePreview: ",t),e.planPreview=t,e.planPreview.installment=(t.total-t.downpay)/t.times},function(e){return console.log("err @getSinglePreview: ",e)})}function focusOn(){return function(e,t,a){e.$on("focusOn",function(e,o){o===a.focusOn&&t[0].focus()})}}function toolTip(){return function(e,t,a){angular.element(".tool-tip").on("click mouseleave",hideTooltip),angular.element(".tool-tip").on("mouseenter",showTooltip)}}function hideTooltip(){$(this).tooltip("hide")}function showTooltip(){$(this).tooltip("show")}angular.module("pinchApp",["ui.router","satellizer","ngAnimate","ngFileUpload","ngImgCrop","stripe.checkout","angular-loading-bar","anim-in-out"]).config(["$stateProvider","$urlRouterProvider","$authProvider",function(e,t,a){Stripe.setPublishableKey("pk_test_t1eThhOKl6esrp6f4jyWqU4J"),e.state(landing).state(authEntrance).state(dashboard).state(dashboard_payment).state(dashboard_plan).state(dashboard_plan_start).state(dashboard_plan_choose).state(dashboard_plan_single).state(dashboard_plan_single_preview).state(dashboard_plan_multiple).state(dashboard_account),t.otherwise("/")}]);var landing={name:"landing",url:"/",views:{main:{templateUrl:"/html/landing.html",controller:"authCtrl"}}},authEntrance={name:"authEntrance",url:"/entrance",views:{main:{templateUrl:"/html/entrance.html",controller:"authCtrl"}}},dashboard={name:"dashboard",url:"/dashboard",views:{main:{templateUrl:"/html/dashboard.html",controller:"dashboardCtrl"}}},dashboard_payment={name:"dashboard_payment",url:"/payment",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_payment.html",controller:"dashboardCtrl"}}},dashboard_plan={name:"dashboard_plan",url:"/plan",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_plan.html",controller:"dashboardCtrl"}}},dashboard_plan_start={name:"dashboard_plan_start",url:"/start",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_start.html",controller:"dashboardCtrl"}}},dashboard_plan_choose={name:"dashboard_plan_choose",url:"/choose",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_choose.html",controller:"dashboardCtrl"}}},dashboard_plan_single={name:"dashboard_plan_single",url:"/choose/single",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_single_preview={name:"dashboard_plan_single_preview",url:"/choose/single/preview",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single_preview.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_multiple={name:"dashboard_plan_multiple",url:"/choose/mutiple",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_multiple.html",controller:"dashboardCtrl"}}},dashboard_account={name:"dashboard_account",url:"/account",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_account.html",controller:"dashboardCtrl"}}};$(document).ready(init),Account.$inject=["$http"],Payment.$inject=["$http"],focus.$inject=["$rootScope","$timeout"],Plan.$inject=["$q","Storage"],Storage.$inject=["$q"],angular.module("pinchApp").service("Account",Account).service("Payment",Payment).factory("focus",focus).service("Plan",Plan).service("Storage",Storage),homeCtrl.$inject=["$scope","$auth","$state","Account","$window","$rootScope","$location"],authCtrl.$inject=["$scope","$auth","$state","Account","$window","$rootScope"],dashboardCtrl.$inject=["$scope","$auth","$state","Account","$rootScope","Payment","$window"],dashboardPlanCtrl.$inject=["$scope","Account","$stateParams","$state","Plan","$rootScope"],angular.module("pinchApp").controller("homeCtrl",homeCtrl).controller("authCtrl",authCtrl).controller("dashboardCtrl",dashboardCtrl).controller("dashboardPlanCtrl",dashboardPlanCtrl),angular.module("pinchApp").directive("focusOn",focusOn),angular.module("pinchApp").directive("toolTip",toolTip);
//# sourceMappingURL=data:application/json;base64,
