"use strict";function init(){sticky(),windowScrollDown()}function sticky(){$(".sticky").sticky({topSpacing:60})}function windowScrollDown(){var e,o=0;$(window).scroll(function(){e=$(this).scrollTop(),$(window).scrollTop()>30&&(o>e?($(".home-page nav").removeClass("folded"),$(".home-page nav").css("border-bottom","0px solid")):$(".home-page nav").addClass("folded")),o=e,$(window).scrollTop()<10&&$(".home-page nav").addClass("top"),$(window).scrollTop()>10&&$(".home-page nav").removeClass("top"),$(window).scrollTop()>30,$(window).scrollTop()<540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0)"),$(window).scrollTop()>540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0.1)")})}function Account(e){this.getCurrentUser=function(){return e({method:"GET",url:"/api/auth/currentUser"})},this.sendVerifyCode=function(o){return e({method:"POST",url:"/api/verify/phone",data:o})},this.verifyCode=function(o){return e({method:"PUT",url:"/api/verify/phone",data:o})},this.getUserData=function(o){return e({method:"GET",url:"/api/users/"+o})},this.updateUserData=function(o,t){return e({method:"PUT",url:"/api/users/"+o,data:t})}}function Payment(e){this.chargeNow=function(o){return e({method:"POST",url:"/api/payment/chargeNow",data:o})}}function focus(e,o){return function(t){o(function(){e.$broadcast("focusOn",t)},0)}}function Plan(e,o){this.addSinglePreview=function(e){o.save(e)},this.getSinglePreview=function(){return e(function(e,t){o.get().then(function(){e(o.get().planPreviewData)})})}}function Storage(e){this.get=function(){},this.save=function(e){console.log("obj: ",e)}}function homeCtrl(e,o,t,a,n,r){function l(){console.log("check"),o.getToken()&&(console.log("check"),a.getCurrentUser(o.getToken()).then(function(o){console.log("res @getCurrentUser from state change: ",o.data),e.currentUser=o.data},function(e){t.go("authEntrance")}))}console.log("homeCtrl loaded"),r.$on("$stateChangeSuccess",function(e,o,t,a,n){r.previousState=a.name,r.currentState=o.name,console.log("Previous state:"+r.previousState),console.log("Current state:"+r.currentState),l()})}function authCtrl(e,o,t,a,n,r){console.log("authCtrl loaded"),e.auth_enter=function(e){o.signup(e).then(function(e){o.setToken(e),t.go("dashboard",{},{reload:!0}),console.log("res @auth_enter: ",e.data)},function(e){console.log("err @auth_enter: ",e)})},e.authenticate=function(e){o.authenticate(e)}}function dashboardCtrl(e,o,t,a,n,r,l){console.log("dashboardCtrl loaded"),e.logout=function(){console.log("check"),o.logout(),e.currentUser=null,t.go("landing",{},{reload:!0}),l.location.reload()},e.sendVerifyCode=function(o){if(console.log("phone: ",o),o.length>5){var t={userData:n.currentUser,phone:o};a.sendVerifyCode(t).then(function(t){console.log("res @sendVerifyCode: ",t.data),n.currentUser.phone.data=o,e.verifyPhoneSentOut=!0},function(e){console.log("err @sendVerifyCode: ",e)})}},e.verifyCode=function(e){if(console.log("code: ",e),0!==e.length){var o={userData:n.currentUser,code:e};a.verifyCode(o).then(function(e){console.log("res @verifyCode: ",e.data),n.currentUser.phone.verified=!0},function(e){console.log("err @verifyCode: ",e)})}},e.doCheckout=function(e){console.log("fff"),console.log("token: ",e);var o={stripeToken:e,userData:n.currentUser};r.chargeNow(o).then(function(e){console.log("res: ",e.data)},function(e){console.log("err: ",e)})}}function dashboardPlanCtrl(e,o,t,a,n,r){if(console.log("dashboardPlanCtrl loaded"),"dashboard_plan_single"==r.currentState&&(e.updateTimes=function(o){e.installmentsGraphData=[];for(var t=0;o>t;t++){var a=~~(e.plan.total/o),n=~~(200*(2/o));e.installmentsGraphData.push({price:a,style:{height:n+"px",width:"90%"}})}},e.previewSinglePlan=function(e){n.addSinglePreview(e).then(function(e){a.go("dashboard_plan_single_preview")},function(e){return console.log("err @addSinglePreview: ",e)})}),"dashboard_plan_single_preview"==r.currentState){var l=function(){for(var e=[],o="0123456789abcdef",t=0;36>t;t++)e[t]=o.substr(Math.floor(16*Math.random()),1);e[14]="4",e[19]=o.substr(3&e[19]|8,1),e[8]=e[13]=e[18]=e[23]="-";var a=e.join("");return a};n.getSinglePreview().then(function(o){console.log("res @getSinglePreview: ",o),e.planPreview=o,e.planPreview.installment=(o.total-o.downpay)/o.times},function(e){return console.log("err @getSinglePreview: ",e)});var s=l();console.log("uuid: ",s)}}function focusOn(){return function(e,o,t){e.$on("focusOn",function(e,a){a===t.focusOn&&o[0].focus()})}}function toolTip(){return function(e,o,t){angular.element(".tool-tip").on("click mouseleave",hideTooltip),angular.element(".tool-tip").on("mouseenter",showTooltip)}}function hideTooltip(){$(this).tooltip("hide")}function showTooltip(){$(this).tooltip("show")}angular.module("pinchApp",["ui.router","satellizer","ngAnimate","ngFileUpload","ngImgCrop","stripe.checkout","angular-loading-bar","anim-in-out"]).config(["$stateProvider","$urlRouterProvider","$authProvider",function(e,o,t){Stripe.setPublishableKey("pk_test_t1eThhOKl6esrp6f4jyWqU4J"),e.state(landing).state(authEntrance).state(dashboard).state(dashboard_payment).state(dashboard_plan).state(dashboard_plan_start).state(dashboard_plan_choose).state(dashboard_plan_single).state(dashboard_plan_single_preview).state(dashboard_plan_multiple).state(dashboard_account),o.otherwise("/")}]);var landing={name:"landing",url:"/",views:{main:{templateUrl:"/html/landing.html",controller:"authCtrl"}}},authEntrance={name:"authEntrance",url:"/entrance",views:{main:{templateUrl:"/html/entrance.html",controller:"authCtrl"}}},dashboard={name:"dashboard",url:"/dashboard",views:{main:{templateUrl:"/html/dashboard.html",controller:"dashboardCtrl"}}},dashboard_payment={name:"dashboard_payment",url:"/payment",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_payment.html",controller:"dashboardCtrl"}}},dashboard_plan={name:"dashboard_plan",url:"/plan",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_plan.html",controller:"dashboardCtrl"}}},dashboard_plan_start={name:"dashboard_plan_start",url:"/start",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_start.html",controller:"dashboardCtrl"}}},dashboard_plan_choose={name:"dashboard_plan_choose",url:"/choose",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_choose.html",controller:"dashboardCtrl"}}},dashboard_plan_single={name:"dashboard_plan_single",url:"/choose/single",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_single_preview={name:"dashboard_plan_single_preview",url:"/choose/single/preview",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single_preview.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_multiple={name:"dashboard_plan_multiple",url:"/choose/mutiple",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_multiple.html",controller:"dashboardCtrl"}}},dashboard_account={name:"dashboard_account",url:"/account",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_account.html",controller:"dashboardCtrl"}}};$(document).ready(init),Account.$inject=["$http"],Payment.$inject=["$http"],focus.$inject=["$rootScope","$timeout"],Plan.$inject=["$q","Storage"],Storage.$inject=["$q"],angular.module("pinchApp").service("Account",Account).service("Payment",Payment).factory("focus",focus).service("Plan",Plan).service("Storage",Storage),homeCtrl.$inject=["$scope","$auth","$state","Account","$window","$rootScope"],authCtrl.$inject=["$scope","$auth","$state","Account","$window","$rootScope"],dashboardCtrl.$inject=["$scope","$auth","$state","Account","$rootScope","Payment","$window"],dashboardPlanCtrl.$inject=["$scope","Account","$stateParams","$state","Plan","$rootScope"],angular.module("pinchApp").controller("homeCtrl",homeCtrl).controller("authCtrl",authCtrl).controller("dashboardCtrl",dashboardCtrl).controller("dashboardPlanCtrl",dashboardPlanCtrl),angular.module("pinchApp").directive("focusOn",focusOn),angular.module("pinchApp").directive("toolTip",toolTip);
//# sourceMappingURL=data:application/json;base64,
