"use strict";function init(){sticky(),windowScrollDown()}function sticky(){$(".singlePlanPreviewSticky").sticky({topSpacing:80})}function windowScrollDown(){var e,a=0;$(window).scroll(function(){e=$(this).scrollTop(),$(window).scrollTop()>30&&(a>e?($(".home-page nav").removeClass("folded"),$(".home-page nav").css("border-bottom","0px solid")):$(".home-page nav").addClass("folded")),a=e,$(window).scrollTop()<10&&$(".home-page nav").addClass("top"),$(window).scrollTop()>10&&$(".home-page nav").removeClass("top"),$(window).scrollTop()>30,$(window).scrollTop()<540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0)"),$(window).scrollTop()>540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0.1)")})}function Account(e){this.getCurrentUser=function(){return e({method:"GET",url:"/api/auth/currentUser"})},this.sendVerifyCode=function(a){return e({method:"POST",url:"/api/verify/phone",data:a})},this.verifyCode=function(a){return e({method:"PUT",url:"/api/verify/phone",data:a})},this.getUserData=function(a){return e({method:"GET",url:"/api/users/"+a})},this.updateUserData=function(a,n){return e({method:"PUT",url:"/api/users/"+a,data:n})}}function Payment(e){this.chargeNow=function(a){return e({method:"POST",url:"/api/payment/chargeNow",data:a})}}function focus(e,a){return function(n){a(function(){e.$broadcast("focusOn",n)},0)}}function Plan(e,a,n){this.addSinglePreview=function(a){return e(function(e,n){localStorage.planPreviewData=JSON.stringify(a),e(localStorage.planPreviewData)})},this.getSinglePreview=function(){return e(function(e,a){e(JSON.parse(localStorage.planPreviewData))})},this.saveSinglePlan=function(e){return n({method:"POST",url:"/api/plans/saveSinglePlan",data:e})},this.getSinglePlan=function(e){return n({method:"GET",url:"/api/plans/getSinglePlan/"+e})}}function Storage(e){this.get=function(){},this.save=function(e){console.log("obj: ",e)}}function focusOn(){return function(e,a,n){e.$on("focusOn",function(e,t){t===n.focusOn&&a[0].focus()})}}function toolTip(){return function(e,a,n){angular.element(".tool-tip").on("click mouseleave",hideTooltip),angular.element(".tool-tip").on("mouseenter",showTooltip)}}function hideTooltip(){$(this).tooltip("hide")}function showTooltip(){$(this).tooltip("show")}function homeCtrl(e,a,n,t,o,r,l){function s(){a.getToken()?t.getCurrentUser(a.getToken()).then(function(e){console.log("@CurrentUser: ",e.data),r.currentUser=e.data},function(e){return n.go("authEntrance")}):!a.getToken()&&l.$$path.includes("dashboard")&&n.go("authEntrance")}r.$on("$stateChangeSuccess",function(a,t,o,i,d){r.previousState=i.name,r.currentState=t.name,console.log(r.previousState," >>> ",r.currentState),"authEntrance"==r.currentState&&e.currentUser&&n.go("dashboard"),e.currentUrl=l.$$path,s()})}function authCtrl(e,a,n,t,o,r){e.auth_enter=function(e){a.signup(e).then(function(e){a.setToken(e),n.go("dashboard",{},{reload:!0}),console.log("res @auth_enter: ",e.data)},function(e){return console.log("err @auth_enter: ",e)})},e.authenticate=function(e){a.authenticate(e)}}function dashboardCtrl(e,a,n,t,o,r,l){e.logout=function(){console.log("check"),a.logout(),e.currentUser=null,n.go("landing",{},{reload:!0}),l.location.reload()},e.sendVerifyCode=function(a){if(console.log("phone: ",a),a.length>5){var n={userData:o.currentUser,phone:a};console.log("userObj: ",n),t.sendVerifyCode(n).then(function(n){console.log("res @sendVerifyCode: ",n.data),o.currentUser.phone.data=a,e.verifyPhoneSentOut=!0},function(e){console.log("err @sendVerifyCode: ",e)})}},e.verifyCode=function(e){if(console.log("code: ",e),0!==e.length){var a={userData:o.currentUser,code:e};t.verifyCode(a).then(function(e){console.log("res @verifyCode: ",e.data),e.data.msg?"incorrect"==e.data.msg?console.log("err: incorrect"):(e.data.msg="expired")&&console.log("err: expired"):o.currentUser.phone.verified=!0},function(e){console.log("err @verifyCode: ",e)})}},e.doCheckout=function(e){console.log("fff"),console.log("token: ",e);var a={stripeToken:e,userData:o.currentUser};r.chargeNow(a).then(function(e){console.log("res: ",e.data)},function(e){console.log("err: ",e)})}}function dashboardPlanCtrl(e,a,n,t,o,r){console.log("dashboardPlanCtrl loaded"),"dashboard_plan_single"==r.currentState&&(e.updateTimes=function(a){e.installmentsGraphData=[];for(var n=0;a>n;n++){var t=~~(e.plan.total/a),o=~~(200*(2/a));e.installmentsGraphData.push({price:t,style:{height:o+"px",width:"90%"}})}},e.defaultPlanTimes=function(a){return a?e.plan:e.plan.times=3},e.previewSinglePlan=function(e){console.log("plan: ",e),o.addSinglePreview(e).then(function(e){t.go("dashboard_plan_single_preview")},function(e){return console.log("err @addSinglePreview: ",e)})},e.plan={},e.singlePayment=function(){return(e.plan.total-e.plan.downpay)/e.plan.times},e.intervalSelected=function(a){e.plan.interval==a?e.plan.interval=null:e.plan.interval=a},"dashboard_plan_single_preview"==r.previousState&&o.getSinglePreview().then(function(a){console.log("res @getSinglePreview data back: ",a),e.plan=a,e.plan.times=a.times},function(e){return console.log("err @getSinglePreview: ",e)})),"dashboard_plan_single_preview"==r.currentState&&(o.getSinglePreview().then(function(a){console.log("res @getSinglePreview: ",a),e.planPreview=a,e.planPreview.installment=(a.total-a.downpay)/a.times},function(e){return console.log("err @getSinglePreview: ",e)}),e.saveSinglePlan=function(e){var a={planDetails:e,creator:r.currentUser};console.log("saveSinglePlanInfo: ",a),o.saveSinglePlan(a).then(function(e){console.log("res @saveSinglePlan: ",e.data),t.go("dashboard_plan_start",{},{reload:!0})},function(e){return console.log("err @saveSinglePlan: ",e)})}),e.getAllPlans=function(){var e=r.currentUser._id;console.log("currentUserId: ",e)},"dashboard_plan_details"==r.currentState&&o.getSinglePlan(t.params.planId).then(function(a){console.log("res @getSinglePlan: ",a.data.data),e.plan=a.data.data},function(e){return console.log("err @saveSinglePlan: ",e)})}angular.module("pinchApp",["ui.router","satellizer","ngAnimate","ngFileUpload","ngImgCrop","stripe.checkout","angular-loading-bar","anim-in-out"]).config(["$stateProvider","$urlRouterProvider","$authProvider",function(e,a,n){Stripe.setPublishableKey("pk_test_t1eThhOKl6esrp6f4jyWqU4J"),e.state(landing).state(authEntrance).state(dashboard).state(dashboard_payment).state(dashboard_plan).state(dashboard_plan_start).state(dashboard_plan_details).state(dashboard_plan_choose).state(dashboard_plan_single).state(dashboard_plan_single_preview).state(dashboard_plan_multiple).state(dashboard_account),a.otherwise("/")}]);var landing={name:"landing",url:"/",views:{main:{templateUrl:"/html/landing.html",controller:"authCtrl"}}},authEntrance={name:"authEntrance",url:"/entrance",views:{main:{templateUrl:"/html/entrance.html",controller:"authCtrl"}}},dashboard={name:"dashboard",url:"/dashboard",views:{main:{templateUrl:"/html/dashboard.html",controller:"dashboardCtrl"}}},dashboard_payment={name:"dashboard_payment",url:"/payment",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_payment.html",controller:"dashboardCtrl"}}},dashboard_plan={name:"dashboard_plan",url:"/plan",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_plan.html",controller:"dashboardCtrl"}}},dashboard_plan_start={name:"dashboard_plan_start",url:"/start",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_start.html",controller:"dashboardCtrl"}}},dashboard_plan_details={name:"dashboard_plan_details",url:"/:planId",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_details.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_choose={name:"dashboard_plan_choose",url:"/choose",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_choose.html",controller:"dashboardCtrl"}}},dashboard_plan_single={name:"dashboard_plan_single",url:"/choose/single",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_single_preview={name:"dashboard_plan_single_preview",url:"/choose/single/preview",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single_preview.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_multiple={name:"dashboard_plan_multiple",url:"/choose/mutiple",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_multiple.html",controller:"dashboardCtrl"}}},dashboard_account={name:"dashboard_account",url:"/account",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_account.html",controller:"dashboardCtrl"}}};$(document).ready(init),Account.$inject=["$http"],Payment.$inject=["$http"],focus.$inject=["$rootScope","$timeout"],Plan.$inject=["$q","Storage","$http"],Storage.$inject=["$q"],angular.module("pinchApp").service("Account",Account).service("Payment",Payment).factory("focus",focus).service("Plan",Plan).service("Storage",Storage),angular.module("pinchApp").directive("focusOn",focusOn),angular.module("pinchApp").directive("toolTip",toolTip),homeCtrl.$inject=["$scope","$auth","$state","Account","$window","$rootScope","$location"],authCtrl.$inject=["$scope","$auth","$state","Account","$window","$rootScope"],dashboardCtrl.$inject=["$scope","$auth","$state","Account","$rootScope","Payment","$window"],dashboardPlanCtrl.$inject=["$scope","Account","$stateParams","$state","Plan","$rootScope"],angular.module("pinchApp").controller("homeCtrl",homeCtrl).controller("authCtrl",authCtrl).controller("dashboardCtrl",dashboardCtrl).controller("dashboardPlanCtrl",dashboardPlanCtrl);
//# sourceMappingURL=data:application/json;base64,
