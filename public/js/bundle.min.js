"use strict";function init(){console.log("jquery loaded"),sticky(),windowScrollDown()}function sticky(){$(".sticky").sticky({topSpacing:60})}function windowScrollDown(){var e,o=0;$(window).scroll(function(){e=$(this).scrollTop(),$(window).scrollTop()>30&&(o>e?($(".home-page nav").removeClass("folded"),$(".home-page nav").css("border-bottom","0px solid")):$(".home-page nav").addClass("folded")),o=e,$(window).scrollTop()<10&&$(".home-page nav").addClass("top"),$(window).scrollTop()>10&&$(".home-page nav").removeClass("top"),$(window).scrollTop()>30,$(window).scrollTop()<540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0)"),$(window).scrollTop()>540&&$(".home-page nav").css("box-shadow","inset 0 -1px 0px 0px rgba(0,0,0,0.1)")})}function Account(e){this.getCurrentUser=function(){return e({method:"GET",url:"/api/auth/currentUser"})},this.sendVerifyCode=function(o){return e({method:"POST",url:"/api/verify/phone",data:o})},this.verifyCode=function(o){return e({method:"PUT",url:"/api/verify/phone",data:o})},this.getUserData=function(o){return e({method:"GET",url:"/api/users/"+o})},this.updateUserData=function(o,t){return e({method:"PUT",url:"/api/users/"+o,data:t})}}function Payment(e){this.chargeNow=function(o){return e({method:"POST",url:"/api/payment/chargeNow",data:o})}}function focus(e,o){return function(t){o(function(){e.$broadcast("focusOn",t)},0)}}function Plan(e){var o={};this.addSinglePreview=function(t){return e(function(e,n){o=t,e(o)})},this.getSinglePreview=function(){return e(function(e,t){o&&e(o)})}}function homeCtrl(e){console.log("homeCtrl loaded"),e.previousState,e.currentState,e.$on("$stateChangeSuccess",function(o,t,n,a,r){e.previousState=a.name,e.currentState=t.name,console.log("Previous state:"+e.previousState),console.log("Current state:"+e.currentState)}),e.$on("animStart",function(e,o,t){}),e.$on("animEnd",function(e,o,t){})}function authCtrl(e,o,t,n,a){function r(){o.getToken()&&n.getCurrentUser(o.getToken()).then(function(o){console.log("res @getCurrentUser: ",o.data),e.currentUser=o.data},function(e){t.go("authEntrance")})}console.log("authCtrl loaded"),e.getCurrentUser=function(){r()},e.auth_enter=function(e){o.signup(e).then(function(e){o.setToken(e),t.go("dashboard",{},{reload:!0}),console.log("res @auth_enter: ",e.data),r()},function(e){console.log("err @auth_enter: ",e)})},e.authenticate=function(e){o.authenticate(e)},e.logout=function(){o.logout(),e.currentUser=null,t.go("home",{},{reload:!0}),a.location.reload()}}function dashboardCtrl(e,o,t,n,a,r,l){function s(o){e.verifyPhoneSentOut=!1;var t=Number(o.phone.verifyCode.expiredAt),n=Date.now();t>n&&(e.verifyPhoneSentOut=!0),e.verifyPhoneCountDown=function(){return""+t}}console.log("dashboardCtrl loaded"),n.getCurrentUser(o.getToken()).then(function(e){a.currentUser||(a.currentUser=e.data),console.log("res @getCurrentUser: ",e.data),s(e.data)},function(e){t.go("home")}),e.sendVerifyCode=function(o){if(console.log("phone: ",o),o.length>5){var t={userData:a.currentUser,phone:o};n.sendVerifyCode(t).then(function(t){console.log("res @sendVerifyCode: ",t.data),a.currentUser.phone.data=o,e.verifyPhoneSentOut=!0},function(e){console.log("err @sendVerifyCode: ",e)})}},e.verifyCode=function(e){if(console.log("code: ",e),0!==e.length){var o={userData:a.currentUser,code:e};n.verifyCode(o).then(function(e){console.log("res @verifyCode: ",e.data),a.currentUser.phone.verified=!0},function(e){console.log("err @verifyCode: ",e)})}},e.doCheckout=function(e){console.log("fff"),console.log("token: ",e);var o={stripeToken:e,userData:a.currentUser};r.chargeNow(o).then(function(e){console.log("res: ",e.data)},function(e){console.log("err: ",e)})}}function dashboardPlanCtrl(e,o,t,n,a,r){console.log("dashboardPlanCtrl loaded"),"dashboard_plan_single"==r.currentState&&(e.updateTimes=function(o){e.installmentsGraphData=[];for(var t=0;o>t;t++){var n=~~(e.plan.total/o),a=~~(200*(2/o));e.installmentsGraphData.push({price:n,style:{height:a+"px",width:"90%"}})}},e.previewSinglePlan=function(e){a.addSinglePreview(e).then(function(e){n.go("dashboard_plan_single_preview")},function(e){return console.log("err @addSinglePreview: ",e)})}),"dashboard_plan_single_preview"==r.currentState&&a.getSinglePreview().then(function(e){console.log("res @getSinglePreview: ",e)},function(e){return console.log("err @getSinglePreview: ",e)})}function focusOn(){return function(e,o,t){e.$on("focusOn",function(e,n){n===t.focusOn&&o[0].focus()})}}function toolTip(){return function(e,o,t){angular.element(".tool-tip").on("click mouseleave",hideTooltip),angular.element(".tool-tip").on("mouseenter",showTooltip)}}function hideTooltip(){$(this).tooltip("hide")}function showTooltip(){$(this).tooltip("show")}angular.module("pinchApp",["ui.router","satellizer","ngAnimate","ngFileUpload","ngImgCrop","stripe.checkout","angular-loading-bar","anim-in-out"]).config(["$stateProvider","$urlRouterProvider","$authProvider",function(e,o,t){Stripe.setPublishableKey("pk_test_t1eThhOKl6esrp6f4jyWqU4J"),e.state(home).state(authEntrance).state(dashboard).state(dashboard_payment).state(dashboard_plan).state(dashboard_plan_start).state(dashboard_plan_choose).state(dashboard_plan_single).state(dashboard_plan_single_preview).state(dashboard_plan_multiple).state(dashboard_account),o.otherwise("/")}]);var home={name:"home",url:"/",views:{main:{templateUrl:"/html/home.html",controller:"homeCtrl"}}},authEntrance={name:"authEntrance",url:"/entrance",views:{main:{templateUrl:"/html/entrance.html",controller:"authCtrl"}}},dashboard={name:"dashboard",url:"/dashboard",views:{main:{templateUrl:"/html/dashboard.html",controller:"dashboardCtrl"}}},dashboard_payment={name:"dashboard_payment",url:"/payment",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_payment.html",controller:"dashboardCtrl"}}},dashboard_plan={name:"dashboard_plan",url:"/plan",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_plan.html",controller:"dashboardCtrl"}}},dashboard_plan_start={name:"dashboard_plan_start",url:"/start",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_start.html",controller:"dashboardCtrl"}}},dashboard_plan_choose={name:"dashboard_plan_choose",url:"/choose",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_choose.html",controller:"dashboardCtrl"}}},dashboard_plan_single={name:"dashboard_plan_single",url:"/choose/single",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_single_preview={name:"dashboard_plan_single_preview",url:"/choose/single/preview",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_single_preview.html",controller:"dashboardPlanCtrl"}}},dashboard_plan_multiple={name:"dashboard_plan_multiple",url:"/choose/mutiple",parent:"dashboard_plan",views:{dashboard_child_section:{templateUrl:"/html/dashboard/dashboard_plan_multiple.html",controller:"dashboardCtrl"}}},dashboard_account={name:"dashboard_account",url:"/account",parent:"dashboard",views:{dashboard_section:{templateUrl:"/html/dashboard_account.html",controller:"dashboardCtrl"}}};$(document).ready(init),Account.$inject=["$http"],Payment.$inject=["$http"],focus.$inject=["$rootScope","$timeout"],Plan.$inject=["$q"],angular.module("pinchApp").service("Account",Account).service("Payment",Payment).factory("focus",focus).service("Plan",Plan),homeCtrl.$inject=["$rootScope"],authCtrl.$inject=["$scope","$auth","$state","Account","$window"],dashboardCtrl.$inject=["$scope","$auth","$state","Account","$rootScope","Payment","$interval"],dashboardPlanCtrl.$inject=["$scope","Account","$stateParams","$state","Plan","$rootScope"],angular.module("pinchApp").controller("homeCtrl",homeCtrl).controller("authCtrl",authCtrl).controller("dashboardCtrl",dashboardCtrl).controller("dashboardPlanCtrl",dashboardPlanCtrl),angular.module("pinchApp").directive("focusOn",focusOn),angular.module("pinchApp").directive("toolTip",toolTip);
//# sourceMappingURL=data:application/json;base64,
